{"ast":null,"code":"import _classCallCheck from \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/src/styleTools/dropDown.js\";\nimport React, { Component } from 'react';\nimport ReactGoogleSheets from 'react-google-sheets';\n\nvar DataComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataComponent, _Component);\n\n  function DataComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DataComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataComponent).call(this, props));\n    _this.state = {\n      sheetLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(DataComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ReactGoogleSheets, {\n        clientId: YOUR_CLIENT_ID,\n        apiKey: YOUR_API_KEY,\n        spreadsheetId: YOUR_SPREADSHEET_ID,\n        afterLoading: function afterLoading() {\n          return _this2.setState({\n            sheetLoaded: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.state.sheetLoaded ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, console.log('Your sheet data : ', this.props.getSheetsData({\n        YOUR_SPREADSHEET_NAME: YOUR_SPREADSHEET_NAME\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.updateCell('sheet02', // sheetName\n          'E', // column\n          13, // row\n          'Apple', // value\n          null, // successCallback\n          function (error) {\n            console.log('error', error);\n          } // errorCallback\n          );\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"update cell!\")) : 'loading...');\n    }\n  }]);\n\n  return DataComponent;\n}(Component);\n\nexport default ReactGoogleSheets.connect(DataComponent);","map":{"version":3,"sources":["/Users/nabil.b/Tests_Techniques/TT_Botify/neo_charts/src/styleTools/dropDown.js"],"names":["React","Component","ReactGoogleSheets","DataComponent","props","state","sheetLoaded","YOUR_CLIENT_ID","YOUR_API_KEY","YOUR_SPREADSHEET_ID","setState","console","log","getSheetsData","YOUR_SPREADSHEET_NAME","updateCell","error","connect"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;IAGMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFe;AAKlB;;;;6BACQ;AAAA;;AACL,aACI,oBAAC,iBAAD;AACI,QAAA,QAAQ,EAAEC,cADd;AAEI,QAAA,MAAM,EAAEC,YAFZ;AAGI,QAAA,aAAa,EAAEC,mBAHnB;AAII,QAAA,YAAY,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAACJ,YAAAA,WAAW,EAAE;AAAd,WAAd,CAAN;AAAA,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMK,KAAKD,KAAL,CAAWC,WAAX,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKK,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKR,KAAL,CAAWS,aAAX,CAAyB;AAACC,QAAAA,qBAAqB,EAArBA;AAAD,OAAzB,CAAlC,CAFL,EAII;AAAQ,QAAA,OAAO,EAAE,mBAAM;AACnB,UAAA,MAAI,CAACV,KAAL,CAAWW,UAAX,CACI,SADJ,EACe;AACX,aAFJ,EAES;AACL,YAHJ,EAGQ;AACJ,iBAJJ,EAIa;AACT,cALJ,EAKU;AACN,oBAACC,KAAD,EAAW;AACPL,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACH,WARL,CAQM;AARN;AAUH,SAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADH,GAmBG,YAzBR,CADJ;AA8BH;;;;EAtCuBf,S;;AAyC5B,eAAeC,iBAAiB,CAACe,OAAlB,CAA0Bd,aAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactGoogleSheets from 'react-google-sheets';\n\n\nclass DataComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            sheetLoaded: false,\n        }\n    }\n    render() {\n        return (\n            <ReactGoogleSheets\n                clientId={YOUR_CLIENT_ID}\n                apiKey={YOUR_API_KEY}\n                spreadsheetId={YOUR_SPREADSHEET_ID}\n                afterLoading={() => this.setState({sheetLoaded: true})}\n            >\n                {this.state.sheetLoaded ?\n                    <div>\n                        {/* Access Data */}\n                        {console.log('Your sheet data : ', this.props.getSheetsData({YOUR_SPREADSHEET_NAME}))}\n                        {/* Update Data */}\n                        <button onClick={() => {\n                            this.props.updateCell(\n                                'sheet02', // sheetName\n                                'E', // column\n                                13, // row\n                                'Apple', // value\n                                null, // successCallback\n                                (error) => {\n                                    console.log('error', error)\n                                } // errorCallback\n                            );\n                        }}>update cell!</button>\n                    </div>\n                    :\n                    'loading...'\n                }\n            </ReactGoogleSheets>\n        )\n    }\n}\n\nexport default ReactGoogleSheets.connect(DataComponent);"]},"metadata":{},"sourceType":"module"}